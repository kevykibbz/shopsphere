<!-- Add Category Modal -->
<div
  class="modal fade"
  id="addCategoryModal"
  tabindex="-1"
  role="dialog"
  aria-labelledby="addCategoryModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-body">
        <button
          type="button"
          class="close"
          data-dismiss="modal"
          aria-label="Close"
        >
          <span aria-hidden="true"><i class="icon-close"></i></span>
        </button>

        <div class="form-box">
          <form id="category-form" enctype="multipart/form-data">
            <h5 class="modal-title" id="addCategoryModalLabel">
              Add New Category
            </h5>

            <!-- Category Name Input -->
            <div class="form-group">
              <label for="category-name">Category name *</label>
              <input
                type="text"
                class="form-control"
                id="category-name"
                name="category-name"
                required
              />
              <span id="category-name-error" class="text-danger"></span>
            </div>

            <!-- Image Upload Input -->
            <div class="form-group">
              <label for="category-image">Category Image </label>
              <input
                type="file"
                class="form-control"
                id="category-image"
                name="category-image"
                accept="image/*"
              />
              <span id="category-image-error" class="text-danger"></span>
            </div>

            <!-- Preview Uploaded Image -->
            <div class="form-group text-center">
              <img
                id="image-preview"
                src="#"
                alt="Preview"
                class="img-thumbnail d-none"
                width="150"
              />
            </div>

            <!-- Submit Button -->
            <div class="form-footer">
              <button
                type="submit"
                id="add-category-btn"
                class="btn btn-outline-primary-2 cursor-pointer"
              >
                <span>ADD CATEGORY</span>
                <i class="icon-long-arrow-right"></i>
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const categoryForm = document.getElementById("category-form");
    const categoryInput = document.getElementById("category-name");
    const categoryError = document.getElementById("category-name-error");
    const imageInput = document.getElementById("category-image");
    const imageError = document.getElementById("category-image-error");
    const imagePreview = document.getElementById("image-preview");
    const submitButton = document.getElementById("add-category-btn");
    const buttonText = submitButton.innerHTML; // Store original button text

    // Disable button initially
    submitButton.disabled = true;

    // Function to validate category name
    function validateCategory() {
      const categoryValue = categoryInput.value.trim();

      if (categoryValue.length === 0) {
        categoryError.innerHTML = `⚠️ Category name cannot be empty`;
      } else if (categoryValue.length < 3) {
        categoryError.innerHTML = `⚠️ Category name must be at least 3 characters`;
      } else {
        categoryError.innerHTML = "";
      }

      // Enable button only if category name is valid
      submitButton.disabled = categoryValue.length < 3;
    }

    // Function to validate image (optional)
    function validateImage(file) {
      if (!file) {
        imageError.innerHTML = ""; // No error, as image is optional
        return true;
      }

      const validTypes = ["image/jpeg", "image/png", "image/jpg"];
      if (!validTypes.includes(file.type)) {
        imageError.innerHTML = `⚠️ Only JPG, JPEG, and PNG formats allowed`;
        return false;
      }

      imageError.innerHTML = "";
      return true;
    }

    // Show image preview
    imageInput.addEventListener("change", function () {
      const file = imageInput.files[0];
      if (file && validateImage(file)) {
        const reader = new FileReader();
        reader.onload = function (e) {
          imagePreview.src = e.target.result;
          imagePreview.classList.remove("d-none");
        };
        reader.readAsDataURL(file);
      } else {
        imagePreview.classList.add("d-none");
      }
    });

    // Listen for input changes
    categoryInput.addEventListener("input", validateCategory);

    // Handle form submission
    categoryForm.addEventListener("submit", async function (e) {
      e.preventDefault();

      const categoryName = categoryInput.value.trim();
      const imageFile = imageInput.files[0];

      if (categoryName.length < 3) {
        return;
      }

      try {
        // Show loading state
        submitButton.disabled = true;
        submitButton.innerHTML = `<span class="spinner-border spinner-border-sm"></span> Adding...`;

        // Create FormData for file upload
        const formData = new FormData();
        formData.append("name", categoryName);
        if (imageFile) {
          formData.append("image", imageFile); // Only send image if provided
        }

        // Send POST request
        const response = await fetch("/api/categories/new", {
          method: "POST",
          credentials:"include",
          body: formData,
        });

        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.message || "Failed to add category.");
        }

        // Success Notification
        showToast("Category added successfully!", "success");

        // Reload to update categories
        setTimeout(() => {
          window.location.reload();
        }, 2000);
      } catch (err) {
        showToast(err.message, "error");
      } finally {
        // Restore button state
        submitButton.innerHTML = buttonText;
        submitButton.disabled = false;
      }
    });
  });
</script>
